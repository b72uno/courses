#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 64 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 39 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 41 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 692 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 385
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname |10.2|) ("
 #"read-case-sensitive #t) (teachpacks ((lib \"draw.ss\" \"teachpack\" "
 #"\"htdp\") (lib \"guess.ss\" \"teac"
 #"hpack\" \"htdp\") (lib \"image.ss\" \"teachpack\" \"htdp\"))) (htdp-"
 #"settings #(#t constructor repeating-decimal #f #t none #f ((lib \"dr"
 #"aw.ss\" \"teachpack\" \"htdp\") (lib \"guess.ss\" \"teachpack\" \"ht"
 #"dp\") (lib \"image.ss\" \"teachpack\" \"htdp\")))))"
) 0 0 4 29 1 #"\n"
0 0 17 3 40 #";; *************************************"
0 0 56 29 1 #"\n"
0 0 17 3 39 #";;  10.2. Lists That Contain Structures"
0 0 56 29 1 #"\n"
0 0 17 3 40 #";; *************************************"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 26 #";; Data analysis & Purpose"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 57 3 1 #" "
0 0 14 3 2 #"ir"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 57 3 1 #" "
0 0 14 3 5 #"price"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 17 3 54 #";; ir is a structure (make-ir x y) where x is a symbol"
0 0 56 29 1 #"\n"
0 0 17 3 20 #";; and y is a number"
0 0 56 29 1 #"\n"
0 0 17 3 25 #";; An inventory is either"
0 0 56 29 1 #"\n"
0 0 17 3 14 #";; 1. empty or"
0 0 56 29 1 #"\n"
0 0 17 3 50 #";; 2 (cons ir inv) where ir is an inventory record"
0 0 56 29 1 #"\n"
0 0 17 3 23 #";; and inv is inventory"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 13 #";; Examples: "
0 0 56 29 1 #"\n"
0 0 17 3 22 #";; Inventory examples:"
0 0 56 29 1 #"\n"
0 0 17 3 36 #";;(cons (make-ir 'doll 17.95) empty)"
0 0 56 29 1 #"\n"
0 0 17 3 30 #";;(cons (make-ir 'robot 22.05 "
0 0 56 29 1 #"\n"
0 0 17 3 35 #";;      (cons (make-ir 'doll 17.95)"
0 0 56 29 1 #"\n"
0 0 17 3 17 #";;        empty))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 28 #";; sum : inventory -> number"
0 0 56 29 1 #"\n"
0 0 17 3 41 #";; to compute the sum of prices of an-inv"
0 0 56 29 1 #"\n"
0 0 17 3 28 #";; (define (sum an-inv) ...)"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 12 #";; Template:"
0 0 56 29 1 #"\n"
0 0 17 3 21 #";(define (sum an-inv)"
0 0 56 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 56 29 1 #"\n"
0 0 17 3 26 #";    [(empty? an-inv) ...]"
0 0 56 29 1 #"\n"
0 0 17 3 5 #";    "
0 0 17 3 1 #"["
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 3 #"..."
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 5 #"first"
0 0 17 3 40 #" an-inv) ... (sum (rest an-inv)) ... ]))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 15 #";; Definitions:"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"sum"
0 0 57 3 1 #" "
0 0 14 3 6 #"an-inv"
0 0 22 3 1 #")"
0 0 57 29 1 #"\n"
0 0 57 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 58 3 1 #" "
0 0 14 3 6 #"an-inv"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #"]"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"ir-price"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 58 3 1 #" "
0 0 14 3 6 #"an-inv"
0 0 22 3 2 #"))"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"sum"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 58 3 1 #" "
0 0 14 3 6 #"an-inv"
0 0 22 3 6 #")))]))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 12 #";; *********"
0 0 56 29 1 #"\n"
0 0 17 3 11 #";;  10.2.1."
0 0 56 29 1 #"\n"
0 0 17 3 12 #";; *********"
0 0 56 29 1 #"\n"
0 0 17 3 39 #";; Damn those exercises are repetitive."
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 66
#";; Adapting function contains? to consume a symbol and an invetory"
0 0 56 29 1 #"\n"
0 0 17 3 42 #";; contains? : symbol inventory -> boolean"
0 0 56 29 1 #"\n"
0 0 17 3 64
#";; to determine whether inventory contains a record for a symbol"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"contains?"
0 0 57 3 1 #" "
0 0 14 3 7 #"aSymbol"
0 0 57 3 1 #" "
0 0 14 3 6 #"an-inv"
0 0 22 3 1 #")"
0 0 57 29 1 #"\n"
0 0 57 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 58 3 1 #" "
0 0 14 3 6 #"an-inv"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 8 #"symbol=?"
0 0 58 3 1 #" "
0 0 14 3 7 #"aSymbol"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"ir-name"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 58 3 1 #" "
0 0 14 3 6 #"an-inv"
0 0 22 3 3 #")))"
0 0 58 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"contains?"
0 0 58 3 1 #" "
0 0 14 3 7 #"aSymbol"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 58 3 1 #" "
0 0 14 3 6 #"an-inv"
0 0 22 3 5 #"))]))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 9 #";; Tests:"
0 0 56 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 9 #"contains?"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"doll"
0 0 17 3 1 #" "
0 0 17 3 36 #"(cons (make-ir 'robot 17.95) empty))"
0 0 56 29 1 #"\n"
0 0 17 3 24 #";; expected value: false"
0 0 56 29 1 #"\n"
0 0 17 3 83
(
 #";(contains? 'doll (cons (make-ir 'robot 22.05) (cons (make-ir 'doll "
 #"17.95) empty)))"
) 0 0 56 29 1 #"\n"
0 0 17 3 23 #";; expected value: true"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 12 #";; *********"
0 0 56 29 1 #"\n"
0 0 17 3 11 #";;  10.2.2."
0 0 56 29 1 #"\n"
0 0 17 3 12 #";; *********"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 25 #";; Data analysis & Design"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 57 3 1 #" "
0 0 14 3 4 #"irwp"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 57 3 1 #" "
0 0 14 3 5 #"price"
0 0 57 3 1 #" "
0 0 14 3 3 #"img"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 17 3 54 #";; irwp (invetory record with picture) is a structure "
0 0 56 29 1 #"\n"
0 0 17 3 39 #";; (make-irwp x y z)where x is a symbol"
0 0 56 29 1 #"\n"
0 0 17 3 35 #";; y is a number and z is an image."
0 0 56 29 1 #"\n"
0 0 17 3 45 #";; if there is no image, z is a symbol 'none."
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 50 #";; show-picture : name struct -> picture / boolean"
0 0 56 29 1 #"\n"
0 0 17 3 47 #";; to determine whether some toy is in invetory"
0 0 56 29 1 #"\n"
0 0 17 3 24 #";; if there is one, show"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 32 #"picture provided in a structure "
0 0 56 29 1 #"\n"
0 0 17 3 45 #";; if there is none, boolean false is output."
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 26 #";; should output the image"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 12 #";; Template:"
0 0 56 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 37 #"define (show-picture a-name irwp) ..."
0 0 56 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 17 3 3 #"..."
0 0 17 3 21 #" (irwp-name irwp) ..."
0 0 56 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 17 3 3 #"..."
0 0 17 3 22 #" (irwp-price irwp) ..."
0 0 56 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 17 3 3 #"..."
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 20 #"irwp-img irwp) ... )"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 14 #";; Definition:"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 14 3 8 #"robotpic"
0 0 56 3 1 #" "
0 2          27 57 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           8 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0000\0\0\0000\b"
 #"\6\0\0\0W\2\371\207\0\0\0\6bKGD\0\377\0\377\0\377\240\275\247"
 #"\223\0\0\r\201IDATh\201\325Z{p\224\327u\377\235\357\261\357]i"
 #"\245\325J\350\201@\210G\f\310\200\354"
 #"\n\2121\302\1\334\3046c\342\220\261"
 #"\233\306i\36\365L2\323\207\323fR"
 #"\247\314\204\304\36\267\261\335L\ef\322"
 #"1S\352d\322f\32\343\306\3668\230\326/\b\6cL\260y\351\201\220@\357"
 #"\267\264\357\375\366\333\357\273\367\364\217]"
 #"IK\343\200$[\236\351\231\321\354\335"
 #"\263\367q~\347\234{\3179\367\n\370\177N\264\20\2236>\262\317SR_\327"
 #"l\352\16W*\326~\374\354\276}\343\v\261\16\0(\v1\2511r\355;B"
 #"\362\257\243i\363\5s\34?\305\2)"
 #"\nX \0\376\304\270\367\321\333\226\321"
 #"\361?\377\34\355\360\223\a{\366,\310"
 #":\0\240\315k\324#\217\350a\327\352{\303\213J6\371\334n\215H\203\2@"
 #"c\eY#\211\222\321\336;\0010\0x\252\26\327o\367W?\243\335\361\5V"
 #"\\\316\351)2\246!G\207\206\317_\352<\361\2\16\0352>9\0\333\367\24"
 #"\371P\373b\355\272[\232\203\36\27\21"
 #"\21\253\4\350\n\21!\327v\224\207h\302b\36Nf`W\324\326T\327\372\376"
 #"R%@'\"\"b\205\0\215\210\222\265\265\234\25\312\267;6\34138uh"
 #"\340\23\1\340f\307\223\316\222\3206\243"
 #"\373\32\32j\303\360\350\32\21\0\"\2"
 #"\200\\\333A\2700\21\247\213G\317\200\0\224e3D (\4\20@\n\21\262"
 #"B\242\273g\230\244\356X\353\17\372\237"
 #"M\0\273\0\310\5\6\260\332\21(\t?\370\3075^\376\233\317\355\200"
 #"\317\353%\20\230@\0\201(\3576\0\345\371\271/\0x\n`\256\235"
) 500
(
 #"\353c\232&\37|\345(\375\270#\270\303nh\2524.\234\356_P\0\241P"
 #"\261\363\17\313\213\203\337\332\275\35\272\256"
 #"\303\264\254i\tg\344.\240\34.\24"
 #"\374\\\330\eD\204\257\334\333\214\356\253\335\372k\235zi\a0g\0\352l;"
 #"\376\340\311\247\266z}\331\306\335\237\335"
 #"\371\371eK\26\23\3\304\314\00031\230\230\31\314L\3149~\236G\222\31y"
 #"\36IfH\316\361\231\31R\202\30@Y\300C\235]m]\273\357\177\300u\342"
 #"\370\261k\37;\200\306\306F\375\253_"
 #"\371\3237\357\273\357\276\257z\335.\4"
 #"\203\305 \312+\234\300\311T\32\307O\276Kc\23\223\\UY\1\205\210\b9"
 #"\327\"\312\271\323D$\212\267O\276K"
 #"\211D\222\27U\204s\352\317\271\31\251"
 #"\n\361\266;\267\354\250[\272dg,\32\331\337\332\332*f\v`V.\24\16"
 #"\207\25\311\354p:\235\344\266l\3265"
 #"-\357\169\372\207\247\376\21\343c#"
 #"\350\351\356\306\343O<\211\315\e\e\177"
 #"g\216\277\375\356^8t\r\355m-\370\327\177{\16+\227-\231\21BS!"
 #"\244\200\333\355r\364\367\367\317\332+f"
 #"\r\340\310\221#h\334\262\23\335\303Q"
 #"47\255#\217\333\211B\317\a\30\257"
 #"\274x\b\212\242\222\313\345\204;w\336"
 #"\27\356\0\262\255,\16\277\370<\34N"
 #"\27\271\235\327\367q\350\32\275\372\326;"
 #"`i\315E\366\331\3\0\200\337\234<"
 #"\235\f\\\274\234\335\261\3716\335\341p"
 #"\314\b\317\340\247\377\376q4\256k\240"
 #"\232\232\305\334\274\271\ty\17\342\31\200"
 #"\340\203\a~\202\347\17}\232\326\256]"
 #"\313\253W.\233\346\3 \"\342\243'Os4\32K\16\r\r\361\357\256\376\373"
 #"i\2669\n\1\216Oi\232,kim?Z[[\223\343\362\264\20\0@"
 #"\214\353\217\316\351\261\204\353\300\24\202\a"
 #"@C\303#\334\264\251\351K\321D\342"
) 500
(
 #"\\6\231l-\350sS\232\255\5\30\310\266\256\\\271\332\22722\224J\e3"
 #"\372-P\202\224\222,[\\\307g\0`&MU\241\252\312\365\374|;\221L"
 #"Q\303\372\365\27\336x\365\325\226\331\n>W\0\0\200\262\2622Dc\t\366E"
 #"\0233B\362\214\253\349\374\6\207~~\20\252m\21[\26C\210\334qj\v"
 #"\356\335\271\v\273\37\375F\316\2\271\21"
 #"\304\0\3L\221X\202\35\37\262\336\307"
 #"\16\240\255\255\215\373\372\a\322\232\323\355"
 #"\235\342q~\23\203\1_i)\25\375\321=p\251* %\201% %\244e"
 #"Q\242f)\206F'\0000q~ \362\26\30\36\36\25\343\343qs\301\1\214"
 #"\214Tg_\177\363\350\231\35\272{\253\242*\340\202=\300`\322\34:O4\254"
 #"\3\246\264\233\373\205\0\260\23@w\337"
 #"P\276?\347\2003\230\231\351\3753\357"
 #"u\247R\221\301\5\a\0\234\265\216\375O\342\351@IESqy\330\245\222\2"
 #"\3113\252\224\0\246PMee\304<"
 #"\335V\30\20\5\252\27\222\221\210D\304"
 #"\257\177\365\313\247\372\257u\244\346\3`"
 #"\316\225Rcc\243\336\3277\366\320\206"
 #"\255w\375\320\345+\251PU\365\272Y\n\334\3\377\207;\363\215\1)\4l+"
 #"\223:{\342\265\357\273\226\326\354\357>v,3g\3511\17\0{\36~x\323"
 #"\252\372\265\373kj\2526\350\272ND"
 #"\304\227.\234\307\217\236y\222TUe"
 #"\277\277\b\201\242b\362x\275\254\252*\322\351\24\305c1N\304c\310fMz"
 #"\340\363\17\362\375\17|!\26763\307"
 #"\242\361hW\347\345g\22\261\261\247\17"
 #"\3480\347H6'\27\372\362\227\277"
 #"\321\270j\315\352\327\253j\252=\376@"
 #"\0N\247\3\212\242\"\24\16\303\343\363\241\277\257\a\f \20(\202\313"
 #"\345\205\242)\310f\f\304\3431\ba\243\242b\0216n\332\f\277?\0"
) 500
(
 #"\6C\330\2\276@ \350\362\270\2378}\346\2350\200G1\207\30\0\334\304\2"
 #"{\367\356]\326\370\a[\177\340\rx\265\326Km}m\355m\eo\335\320\270"
 #"\231\210\220\210'P\22,\206\323\351\310"
 #"\345eDP\362\237S\177\323\311\4]\227D\3\310m\343T*\r\311\f\217\307"
 #"\203\276\336^\373\312\225\313O\354\336\265"
 #"\353\26UUq\376\334\305W\276\375\327"
 #"\337\374\367\233\1\270\241\5::\272\356x\354\273\177\367\20\1TW[-G\""
 #"Q\352\272\332\313\225\345%\270\377\236\355"
 #"(\17\207\210(w*\346\252\305\334\341\222/o\362|P\356P\232\3063]\364"
 #"X\226\305\35W\272\350\370;gXQu\365\356\235;\3675o\331\310\222\31c"
 #"c#\25\0~\201\233Ti7\0040>>\251\234k\271\2UU\20\215\306("
 #"2\31\245%\213\253yC\370\n\206[&\340\367\177\rD\n@@\353\325>\274"
 #"5\34\303\250\305\310!\311\225h\nh"
 #"\372\344q\203q\213W\307\216U\265\b"
 #"\26\371\321\376\336\177BI\\\306\266\255"
 #"_\307\v/\35\201\256k\370\240\245\3"
 #"\212\252\"\32\217\317j\177\336\20\300\350"
 #"D\324~\355\355\323\244\252*\262\231\f"
 #"\31\206\201\333\e\e(=\222\201N^\244\f\23\314L\317\275\375>\366\247=H"
 #"8\334\371Ey*O\232\242\274\336\t"
 #"\312\204Ek\332O\343\237\232\226\302\355"
 #"\252\244Hd\34\365^/\255\250\253\305"
 #"\373-\2271\231\266HU\24\264\267\\"
 #"\314\316\6\300\r\357k&\307\372\216L"
 #"\16\r^^\273\262\16\347~{\352\224"
 #"\303\351\204\246;\270l\371v\16\325m"
 #"\341d*\215#\247>\340\177\236\0g\2626\264d\2347\35?\302M\307\16C"
 #"\e\e\341z\371\337\254\r\275\213\352"
 #"\366\26\336\366\326K\\\332\331\n-\36\345vK\341\307"
 #"\336<\ag\311r\256\273\355\213\310d\263\34\b\370\371J"
) 500
(
 #"\353\205K\325\25!^TV\302\2779v\370G\230E\221\177C\v\f\256X\21"
 #"\325t%\266(\34\2AMj\252\206D2\5K0\264\\b\206\377j\355\3"
 #"\234\305p3 \301\30\364\6A$\340J$\220\314\26\303m\350\260l\e\203\236"
 #"b(\226\5\327\344$\210\31]$q\362\\+6\257\273\5\331l\26\206\231\205"
 #"\225\25\261\322`1\230\31e\301\362\356"
 #"~t\334\324\0027\4\320\\\320f\205\25\6\20K\244(kK\250\252\2\333\26"
 #"\30\211\306\311\343\224S\21\230|\311\b"
 #"\244\24\360\220F\36o\4V\312\1\227"
 #"\251\221\236I\301A\0045k\322T\36\3215$\251\241>\r\323\314R\3320\300"
 #",\200\3741UPs\314\37\300u$\0!%\"\2618\233\226\200\252*\20B"
 #"\20bQvjY(\304$\245\340\305\275\235\220,)nK.\365\367\"\231\366"
 #"S\311\bx\331\304\20.\225U\223\341/f0CQ\24J\a5\216%R\224"
 #"5MN\246\f\330y]\315Z\2469\1\0 \245D4\226@\326\226\320T\25"
 #"B\bh\211\30\\\224\206B\4\226\2=n?\210\b\236d\2\3616/\212X"
 #"AZJ\264\6\312\0\311p\305\242\0\30\212\242 \233\362!\236H\"c\232H"
 #"\246\322(,2>\26\0\307\0\254/\370.\244D2m\20\223\2UU!\205"
 #"\204f\333\344Q\246\203\0265\216\364\300"
 #"\222\2\347\253\352\251\252a\30m=~"
 #"\254\354#Z\36\31\301\271P%\354\342\20M\59\3132)\226L!c\30\224"
 #"H\245\0001\343B\263:\202p\243k"
 #"\225\346=\276\372\365\315\a\227\336\365\231"
 #"\273:\205\252\216\246\255\200;\25\367\270"
 #"\274>\3265\35\0A\bA]\275\203"
 #"\\T\24\200\317\343&\267\313\301\261\222\20R\25U\344\363yY\306"
 #"B\b\251%\244\26\59\21\256\200\2734D\36\217\207}\0367\374"
) 500
(
 #"^\27)\322\342E\34122M\223c\261\4\304\322\345e\261\345\rZ\247\255\240"
 #"}`\3245\241e\217`hh~\201L\35\37\271\347\232\253x\327\277\354\375\316"
 #"\2630\222\211\320\246\235_\333\251K\b!aI9U\306\300\245\253(/-\201"
 #"\252\22\230\t%\275W \1LV\327A\v\367bt\322\217\252\204\216\340d\4"
 #"c\276*\250E\305 \"H)`%\31B\b\330B@\b\201\326\216\236\321C"
 #"\377\361\360sJ\331\242\32\317\372;\277"
 #"\204\210\375S\0'\346\5@\f\265\234"
 #"\300\317\237\371\26\372;~\6@\212\370"
 #"\344\260\374\354\275?\26\266\200\209\245"
 #"h\212\202\240\317\5\237\307\r\277\317\5"
 #"&\202\307\f\3\0\364p\20\360\31P\331\213R\247\16\277b\203CA8\212\203"
 #" \2\6\372\a\260\250\242\24\266\220\310"
 #"\332\2\266-\240\265\234\372\25:~\373\204\354\250t&;\333/\"c\336\264F"
 #"\376\375{`bb\0\2308\210|0\361\270\320a\3336\244\260\211\205\r&\r"
 #"\202\201U\313\353\350rW\17j\e\327"
 #"\303\341\320\211\312\202P\210P\n\"\242"
 #"0\226\370\t\271\334\256\16\376\\\203\242"
 #"\321\30`\231(\16T\221m\333\20\226ER\332\220\f\v\200\0\6\323\30\301~"
 #"|\324@V8Ar\"5`\30\246m\30\246\2529\235p\20AS\230T\335"
 #"\301\313\352\26\343\312\345\313T^\21\346"
 #"\"\2377\237\330\315$y<U\3703\323d,\316\351D\32\313\226\326\222-\4"
 #"\333\226M\351\264\311\351t\32i\323\350"
 #"\377\260\265oD\263~\372\211D\304\325"
 #"\211\341\276\226\214\221\"\217\222\246\246:"
 #"&)l\260\20\344\324uZ\\]\5\247\246\221ad\31002\310\177\222ad"
 #"\220\311\230\224\311\230d\232Y\370\275\36*\257\b\221m\v\b+C\353"
 #"k\fh0(\25KfF\343c\257\317V\236)\232C\34\30L\267"
) 500
(
 #"\264(\217\aC\345\277P\203Q\335\325"
 #"\375\1Lc7\331\322\301\212\242@S\211\230\210\211\b*\201$\21\23\0%g"
 #"\n\316k\213\4s\316 R\222\216\4\353W_\"\231\336\310\27.\234~61"
 #"8\3309W\0s-)\35\245\25\265\177\326\320\270\351{\305\245\241\220Cw\20"
 #")\304\n)P5\225\2309'\264\252\22K\311 \202\252($\245\314\1\310\267"
 #"\247\256\337\263\31\223\263Y\303\274t\356"
 #"\275\237\215\366]},\26\213E\26\32\0\0hNg`im}\375_m\271"
 #"\373\376o\322\32455\345\n\3657^\376\345S\211\310D\17\364\231\1\3255+"
 #"\356h\332v\367CTp\263h\3336\16?\377\334\367\222\321\361#\351t\372\22"
 #"\200y=\364\315\347\225\3226\315\370\25"
 #"\315\3479\353\b\24a\371\322\32v\350"
 #"\32\372\207\307h\240\177\230\311\241\276\34"
 #"\211\214\236*\34PQ\271\202\234E\301"
 #"\a\353k\253HS\25\356\31\32\303\330"
 #"\320\20y}\245/\217\16\366\236\237\217"
 #"\340\37\5\0\320\334\354*\255o\372b"
 #"\365\255\267\302T\b&\200\242eE\210\272\3740Kj*\201K\\\320\327W\271"
 #"v\353\237T\255]\203L\336Z\245\365"
 #"\305\2109\334H\371\203\345\37E\370y"
 #"\3\320\225\312\257_\255]\263\355@\353\0Pp\265\b0eV\336\376}8\214"
 #"\227p\354\230\r\0\32\207\377\342Jy"
 #"\375\306\316\226\251WT\246\251\313#c\305\206}8[\372&ph\326/2\37"
 #"\a\0U.^\376\320H\240\4\n\0\3119\351U\200$3\363\252[?\205\213"
 #"\2477\0x\17\200*Vmxp\320_\222\333\304\f\222\310otf\22kn"
 #"\337\2105'V\340\22\332>I\0\212\370\340\370it]\270\3561\316\236j\b"
 #"f\ftO\5!\215\317\34{\333n=}\341Cg\262\245D::?7\316\323|\377\tC\277"
) 32
(
 #"\311X\v3\205\311\\\372\316\231\376\27\31\264Y\325"
 #"\262WC\356\0\0\0\0IEND\256B`\202"
) 0 0 22 3 1 #")"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 14 3 5 #"robo1"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-irwp"
0 0 57 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"robot1"
0 0 57 3 1 #" "
0 0 20 3 5 #"29.95"
0 0 57 3 1 #" "
0 0 14 3 8 #"robotpic"
0 0 22 3 1 #")"
0 0 57 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 2 #"))"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 56 3 1 #" "
0 0 14 3 5 #"robo2"
0 0 56 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-irwp"
0 0 57 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"robot1"
0 0 57 3 1 #" "
0 0 20 3 5 #"29.95"
0 0 57 3 1 #" "
0 0 14 3 8 #"robotpic"
0 0 22 3 1 #")"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-irwp"
0 0 57 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"robot2"
0 0 57 3 1 #" "
0 0 20 3 5 #"23.35"
0 0 57 3 1 #" "
0 0 14 3 4 #"null"
0 0 22 3 1 #")"
0 0 57 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 56 29 1 #"\n"
0 0 17 3 46 #";; defining some things to make my life easier"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"show-picture"
0 0 57 3 1 #" "
0 0 14 3 4 #"name"
0 0 57 3 1 #" "
0 0 14 3 4 #"irwp"
0 0 22 3 1 #")"
0 0 57 3 1 #" "
0 0 57 29 1 #"\n"
0 0 57 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 58 3 1 #" "
0 0 14 3 4 #"irwp"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 8 #"symbol=?"
0 0 58 3 1 #" "
0 0 14 3 4 #"name"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"irwp-name"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 58 3 1 #" "
0 0 14 3 4 #"irwp"
0 0 22 3 3 #")))"
0 0 58 3 1 #" "
0 0 58 29 1 #"\n"
0 0 58 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 8 #"irwp-img"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 58 3 1 #" "
0 0 14 3 4 #"irwp"
0 0 22 3 3 #"))]"
0 0 58 29 1 #"\n"
0 0 58 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"show-picture"
0 0 58 3 1 #" "
0 0 14 3 4 #"name"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 58 3 1 #" "
0 0 14 3 4 #"irwp"
0 0 22 3 5 #"))]))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 9 #";; Tests:"
0 0 56 29 1 #"\n"
0 0 17 3 29 #";(show-picture 'robot1 robo1)"
0 0 56 29 1 #"\n"
0 0 17 3 26 #";; expected value: picture"
0 0 56 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 12 #"show-picture"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"robotX"
0 0 17 3 7 #" robo2)"
0 0 56 29 1 #"\n"
0 0 17 3 25 #";; expected value: false;"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 12 #";; *********"
0 0 56 29 1 #"\n"
0 0 17 3 11 #";;  10.2.3."
0 0 56 29 1 #"\n"
0 0 17 3 12 #";; *********"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 25 #";; Data analysis & design"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 4 #";; ("
0 0 17 3 13 #"define-struct"
0 0 17 3 1 #" "
0 0 17 3 4 #"irwp"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 4 #"name"
0 0 17 3 1 #" "
0 0 17 3 5 #"price"
0 0 17 3 6 #" img))"
0 0 56 29 1 #"\n"
0 0 17 3 54 #";; irwp (invetory record with picture) is a structure "
0 0 56 29 1 #"\n"
0 0 17 3 39 #";; (make-irwp x y z)where x is a symbol"
0 0 56 29 1 #"\n"
0 0 17 3 35 #";; y is a number and z is an image."
0 0 56 29 1 #"\n"
0 0 17 3 45 #";; if there is no image, z is a symbol 'none."
0 0 56 29 1 #"\n"
0 0 17 3 56 #";; THE STRUCTURE IS ALREADY DEFINED IN PREVIOUS EXERCISE"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 36 #";; (define (price-of toy inventory))"
0 0 56 29 1 #"\n"
0 0 17 3 46 #";; price-of is a function (price-of x y) where"
0 0 56 29 1 #"\n"
0 0 17 3 33 #";; x is a symbol and y is a list "
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 29 #";; Purpose, contract & header"
0 0 56 29 1 #"\n"
0 0 17 3 55 #";; price-of-toy : symbol list -> number / boolean false"
0 0 56 29 1 #"\n"
0 0 17 3 61
#";; to determine the price of the toy, otherwise outputs false"
0 0 56 29 1 #"\n"
0 0 17 3 60
#";; function price-of checks the list for a matching entry of"
0 0 56 29 1 #"\n"
0 0 17 3 39 #";; toy and outputs the price of the toy"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 13 #";; Examples: "
0 0 56 29 1 #"\n"
0 0 17 3 49 #";; see tests, using the same lists defined above "
0 0 56 29 1 #"\n"
0 0 17 3 5 #";; in"
0 0 17 3 1 #" "
0 0 17 3 17 #"previous exercise"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 12 #";; Template:"
0 0 56 29 1 #"\n"
0 0 17 3 39 #";; (define (price-of toy inventory) ..."
0 0 56 29 1 #"\n"
0 0 17 3 8 #";; (cond"
0 0 56 29 1 #"\n"
0 0 17 3 32 #";;    [(empty? inventory) false]"
0 0 56 29 1 #"\n"
0 0 17 3 15 #";;    [else ..."
0 0 56 29 1 #"\n"
0 0 17 3 48 #";;         ... (irwp-name (first inventory)) ..."
0 0 56 29 1 #"\n"
0 0 17 3 48 #";;         ... (irwp-price (first invetory)) ..."
0 0 56 29 1 #"\n"
0 0 17 3 50 #";;         ... (irwp-picture (first inventory) ..."
0 0 56 29 1 #"\n"
0 0 17 3 37 #";;         ... (rest invetory) ...]))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 14 #";; Definition:"
0 0 56 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"price-of"
0 0 57 3 1 #" "
0 0 14 3 3 #"toy"
0 0 57 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 22 3 1 #")"
0 0 57 29 1 #"\n"
0 0 57 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 57 3 1 #" "
0 0 57 29 1 #"\n"
0 0 57 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 57 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 22 3 1 #")"
0 0 57 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 57 29 1 #"\n"
0 0 57 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 8 #"symbol=?"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"irwp-name"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 57 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 22 3 2 #"))"
0 0 57 3 1 #" "
0 0 14 3 3 #"toy"
0 0 22 3 1 #")"
0 0 57 29 1 #"\n"
0 0 57 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 10 #"irwp-price"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 57 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 22 3 3 #"))]"
0 0 57 29 1 #"\n"
0 0 57 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"price-of"
0 0 57 3 1 #" "
0 0 14 3 3 #"toy"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 57 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 22 3 5 #"))]))"
0 0 56 29 1 #"\n"
0 0 56 29 1 #"\n"
0 0 17 3 9 #";; Tests:"
0 0 56 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 8 #"price-of"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"robot1"
0 0 17 3 1 #" "
0 0 17 3 6 #"robo1)"
0 0 56 29 1 #"\n"
0 0 17 3 24 #";; expected value: 29.95"
0 0 56 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 8 #"price-of"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"robot2"
0 0 17 3 1 #" "
0 0 17 3 6 #"robo2)"
0 0 56 29 1 #"\n"
0 0 17 3 21 #";; expected value: 23"
0 0 17 3 3 #".35"
0 0 56 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 8 #"price-of"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"robot2"
0 0 17 3 1 #" "
0 0 17 3 6 #"robo1)"
0 0 56 29 1 #"\n"
0 0 17 3 24 #";; expected value: false"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 12 #";; *********"
0 0 4 29 1 #"\n"
0 0 17 3 11 #";;  10.2.4."
0 0 4 29 1 #"\n"
0 0 17 3 12 #";; *********"
0 0 4 29 1 #"\n"
0 0 17 3 63
#";; PRETTY MUCH THE PREVIOUS EXERCISE WITH A DIFFERENT STRUCTURE"
0 0 4 29 1 #"\n"
0 0 17 3 42 #";; IMPELEMENTATION. CANT BE ARSED TO DO IT"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 26 #";; ***********************"
0 0 4 29 1 #"\n"
0 0 17 3 24 #";;   Whatever comes next"
0 0 4 29 1 #"\n"
0 0 17 3 26 #";; ***********************"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 25 #";; Data analysis & design"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"ir"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 5 #"price"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 17 3 51 #";; ir is a struct (make-ir x y) where x is a symbol"
0 0 4 29 1 #"\n"
0 0 17 3 20 #";; and y is a number"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 26 #";; ***********************"
0 0 4 29 1 #"\n"
0 0 17 3 21 #";;  10.2.5. - 10.2.9."
0 0 4 29 1 #"\n"
0 0 17 3 26 #";; ***********************"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 31 #";; REALLY DOESNT SEEM LIKE MUCH"
0 0 4 29 1 #"\n"
0 0 17 3 57 #";; I KNOW I'D HAVE TO PRACTICE WRITING DOCUMENTATION AND "
0 0 4 29 1 #"\n"
0 0 17 3 50 #";; EVERYTHING ELSE BUT THOSE EXERCISES DOESNT SHOW"
0 0 4 29 1 #"\n"
0 0 17 3 41 #";; ANY INCREASED DIFFICULTY LEVEL AT ALL!"
0 0 4 29 1 #"\n"
0 0 17 3 59
#";; SO I'M SKIPPING THEM. THEY ARE WAY TOO UNINTERESTING. :("
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 14 3 1 #"N"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0           0
